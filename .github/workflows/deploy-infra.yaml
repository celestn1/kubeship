name: Deploy KubeShip Infrastructure on AWS EKS

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
      - .github/workflows/deploy-infra.yml

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    env:
      AWS_REGION: eu-west-2
      TF_VAR_project_name: kubeship
      TF_VAR_environment: dev
      TF_VAR_aws_region: eu-west-2
      TF_VAR_availability_zones: '["eu-west-2a", "eu-west-2b"]'
      TF_VAR_eks_cluster_name: kubeship-cluster
      TF_VAR_eks_cluster_version: "1.29"
      TF_VAR_gitops_repo_url: https://github.com/celestn1/kubeship.git
      TF_VAR_target_revision: main
      TF_VAR_argocd_app_manifest_path: manifests
      TF_VAR_alb_arn: arn:aws:elasticloadbalancing:eu-west-2:240398787204:loadbalancer/app/kubeship-alb/xyz123

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=infra/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -out=tfplan.out

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.out
