# ------------------------------
# .github/workflows/destroy-infra.yaml
# ------------------------------

name: Destroy KubeShip Infrastructure on AWS EKS

# Manual trigger only
on:
  workflow_dispatch:

concurrency:
  group: destroy-infra-${{ github.ref }}
  cancel-in-progress: true

jobs:
  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    env:
      AWS_REGION:                  ${{ secrets.AWS_REGION }}
      TF_PROJECT_NAME:             ${{ secrets.TF_PROJECT_NAME }}
      TF_ENVIRONMENT:              ${{ secrets.TF_ENVIRONMENT }}
      TF_EKS_CLUSTER_NAME:         ${{ secrets.TF_EKS_CLUSTER_NAME }}
      TF_STATE_BUCKET:             ${{ secrets.TF_STATE_BUCKET }}
      TF_LOCK_TABLE:               ${{ secrets.TF_LOCK_TABLE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${TF_STATE_BUCKET}" \
            -backend-config="key=infra/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TF_LOCK_TABLE}"

      - name: Terraform Destroy Plan
        run: |
          terraform plan \
            -destroy \
            -lock-timeout=2m \
            -var="project_name=${TF_PROJECT_NAME}" \
            -var="environment=${TF_ENVIRONMENT}" \
            -var="eks_cluster_name=${TF_EKS_CLUSTER_NAME}" \
            -out tfdestroy.plan

      - name: Terraform Destroy Apply
        run: terraform apply -auto-approve tfdestroy.plan

      - name: Success notification
        if: ${{ success() }}
        run: echo "Infrastructure destroyed successfully."
