# ------------------------------
# .github/workflows/destroy-infra.yaml
# ------------------------------
name: Destroy KubeShip Infrastructure on AWS EKS

on:
  workflow_dispatch:

jobs:
  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    env:
      AWS_REGION:                              ${{ secrets.AWS_REGION }}
      TF_PROJECT_NAME:                         ${{ secrets.TF_PROJECT_NAME }}
      TF_ENVIRONMENT:                          ${{ secrets.TF_ENVIRONMENT }}
      TF_EKS_CLUSTER_NAME:                     ${{ secrets.TF_EKS_CLUSTER_NAME }}
      TF_EKS_CLUSTER_VERSION:                  ${{ secrets.TF_EKS_CLUSTER_VERSION }}
      TF_GITOPS_REPO_URL:                      ${{ secrets.TF_GITOPS_REPO_URL }}
      TF_TARGET_REVISION:                      ${{ secrets.TF_TARGET_REVISION }}
      TF_ARGOCD_APP_MANIFEST_PATH:             ${{ secrets.TF_ARGOCD_APP_MANIFEST_PATH }}
      TF_AVAILABILITY_ZONE_1:                  ${{ secrets.TF_AVAILABILITY_ZONE_1 }}
      TF_AVAILABILITY_ZONE_2:                  ${{ secrets.TF_AVAILABILITY_ZONE_2 }}
      TF_STATE_BUCKET:                         ${{ secrets.TF_STATE_BUCKET }}
      TF_LOCK_TABLE:                           ${{ secrets.TF_LOCK_TABLE }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${TF_STATE_BUCKET}" \
            -backend-config="key=infra/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TF_LOCK_TABLE}"
      - name: Generate secrets.auto.tfvars.json
        run: |
          cat > secrets.auto.tfvars.json <<EOF
          {
            "secrets_map": {
              "JWT_SECRET_KEY": "${{ secrets.JWT_SECRET_KEY }}",
              "JWT_ALGORITHM": "${{ secrets.JWT_ALGORITHM }}",
              "DATABASE_URL": "${{ secrets.DATABASE_URL }}",
              "REDIS_URL": "${{ secrets.REDIS_URL }}"
            }
          }
          EOF
      - name: ðŸ”¥ Terraform Destroy
        run: |
          terraform destroy -auto-approve \
            -var-file="secrets.auto.tfvars.json" \
            -var="project_name=${TF_PROJECT_NAME}" \
            -var="environment=${TF_ENVIRONMENT}" \
            -var="aws_region=${AWS_REGION}" \
            -var="eks_cluster_name=${TF_EKS_CLUSTER_NAME}" \
            -var="eks_cluster_version=${TF_EKS_CLUSTER_VERSION}" \
            -var="gitops_repo_url=${TF_GITOPS_REPO_URL}" \
            -var="target_revision=${TF_TARGET_REVISION}" \
            -var="argocd_app_manifest_path=${TF_ARGOCD_APP_MANIFEST_PATH}" \
            -var="availability_zones=[\"${TF_AVAILABILITY_ZONE_1}\", \"${TF_AVAILABILITY_ZONE_2}\"]"